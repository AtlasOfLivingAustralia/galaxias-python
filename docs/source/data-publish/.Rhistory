galah_call() |> atlas_occurrences(doi = "https://doi.org/10.26197/ala.e413b946-8959-41f8-9ae9-897d86029844") |> collapse()
x <- galah_call() |> atlas_occurrences(doi = "https://doi.org/10.26197/ala.e413b946-8959-41f8-9ae9-897d86029844") |> collapse()
collapse(x)
x <- request_data() |>
filter(genus == "Crinia", year == 2020) |>
group_by(species) |>
arrange(species) |>
count()
collapse(x)
x <- request_data() |> atlas_occurrences(doi = "https://doi.org/10.26197/ala.e413b946-8959-41f8-9ae9-897d86029844") |> collapse()
collapse(x)
request_data() |> atlas_occurrences(doi = "https://doi.org/10.26197/ala.e413b946-8959-41f8-9ae9-897d86029844") |> collapse()
request_data(doi = "https://doi.org/10.26197/ala.e413b946-8959-41f8-9ae9-897d86029844") |> collapse()
request_data() |> filter(doi == "https://doi.org/10.26197/ala.e413b946-8959-41f8-9ae9-897d86029844") |> atlas_occurrences() |> collapse()
request_data() |> filter(doi == "https://doi.org/10.26197/ala.e413b946-8959-41f8-9ae9-897d86029844") |> collapse()
x <- request_data() |> filter(doi == "https://doi.org/10.26197/ala.e413b946-8959-41f8-9ae9-897d86029844") |> collapse()
x
x['url']
remotes::install_github("AtlasOfLivingAustralia/galaxias@development")
library(galaxias)
library(tibble)
library(lubridate)
df <- tibble(
latitude = c(-35.310, "-35.273"), # deliberate error for demonstration purposes
longitude = c(149.125, 149.133),
date = c("14-01-2023", "15-01-2023"),
date2 = c("14-01-2023 10:23:00", "14-01-2023 10:24:01"),
time = c("10:23", "11:25"),
time2 = c("10:23:00", "11:25:00"),
month = c("Jan", "BLF"),
month2 = c("January", "February"),
day = c(100, 101),
day2 = c("100", "101"),
species = c("Callocephalon fimbriatum", "Eolophus roseicapilla"),
n = c(2, 3),
crs = c("WGS84", "WGS8d"),
country1 = c("AU", "DE"),
country_real = c("Naustralia", "Denmark"),
continent = c("bork", "Europe")
)
df |>
check_dwc()
df |>
use_occurrences(basisOfRecord = "humanObservation") |>
use_coordinates(decimalLatitude = as.numeric(latitude),
decimalLongitude = longitude) |>
check_dwc()
df |>
use_occurrences(basisOfRecord = "humanObservation") |>
use_coordinates(decimalLatitude = as.numeric(latitude),
decimalLongitude = longitude) |>
check_dwc()
df |>
use_occurrences(basisOfRecord = "humanObservation") |>
use_coordinates(decimalLatitude = as.numeric(latitude),
decimalLongitude = longitude) |>
use_datetime(eventDate = date) |>
check_dwc()
df |> use_datetime(eventDate = date) |> check_dwc()
df |> use_datetime(eventDate = date2) |> check_dwc()
remotes::install_github("AtlasOfLivingAustralia/galaxias@development")
remotes::install_github("AtlasOfLivingAustralia/galaxias@development",force = TRUE)
library(galaxias)
library(tibble)
library(lubridate)
df <- tibble(
latitude = c(-35.310, "-35.273"), # deliberate error for demonstration purposes
longitude = c(149.125, 149.133),
date = c("14-01-2023", "15-01-2023"),
date2 = c("14-01-2023 10:23:00", "14-01-2023 10:24:01"),
time = c("10:23", "11:25"),
time2 = c("10:23:00", "11:25:00"),
month = c("Jan", "BLF"),
month2 = c("January", "February"),
day = c(100, 101),
day2 = c("100", "101"),
species = c("Callocephalon fimbriatum", "Eolophus roseicapilla"),
n = c(2, 3),
crs = c("WGS84", "WGS8d"),
country1 = c("AU", "DE"),
country_real = c("Naustralia", "Denmark"),
continent = c("bork", "Europe")
)
df |> use_datetime(eventDate = date) |> check_dwc()
install.packages(c("tidyverse", "galah", "here", "sf", "rmapshaper", "waffle", "showtext", "glue"), dependencies=c("Depends", "Imports"))
library(galah)
show_all(atlases)
search_all(fields,"re")
search_all(fields,"rese")
search_all(fields,"user")
search_all(fields,"userVerified")
search_all(fields,"userVerified") |> show_values()
galah_call() |> galah_filter(userVerified == true) |> atlas_counts()
search_all(fields,"exper")
search_all(fields,"exp")
search_all(fields)
search_all_fields()
show_all(fields)
search_all(fields,"identifiedBy") |> show_values()
search_all(fields,"identifierRole") |> show_values()
search_all(fields,"identificationVerificationStatus") |> show_values()
galah_call() |> galah_group_by(identificationVerificationStatus) |> atlas_counts()
rlang::last_trace()
galah_call() |> galah_group_by(identificationVerificationStatus) |> galah_filter(year == 2024) |> atlas_counts()
galah_call() |> galah_filter(dataResourceName == iNaturalist) |> atlas_counts()
galah_call() |> galah_filter(dataResourceName == "iNaturalist") |> atlas_counts()
search_values(field,"data")
search_values("data")
search_values(data)
galah_call() |> galah_filter(dataResourceName == "iNaturalist Australia") |> atlas_counts()
galah_call() |> galah_filter(dataResourceName == "iNaturalist Australia",identificationVerificationStatus == research) |> atlas_counts()
galah_call() |>
galah_filter(dataResourceName == "iNaturalist Australia") |>
atlas_counts()
galah_call() |>
galah_filter(dataResourceName == "iNaturalist Australia",
identificationVerificationStatus == research) |>
atlas_counts()
galah_call() |> galah_filter(GEODETIC_DATUM_INVALID == True) |> atlas_counts()
galah_call() |> galah_filter(GEODETIC_DATUM_INVALID == true) |> atlas_counts()
library(galah)
galah_call() |> search_values("data")
galah_call() |> search_all_fields("data")
galah_call() |> search_all(fields,"data")
galah_call() |> search_all(fields)
?search_all()
search_fields(data)
search_fields("data")
update.packages("galah")
update.packages(oldPkgs = "galah")
installed.packages("galah")
package_version("galah")
library(galah)
package_version("galah")
packageVersion("galah")
galah_config("amanda.buyan@csiro.au")
galah_config(email == "amanda.buyan@csiro.au")
galah_config(email == amanda.buyan@csiro.au)
galah_config()
galah_config(email == "amanda.buyan@csiro.au")
galah_call() |> galah_identify("Tiliqua nigrolutea")
galah_call() |> galah_identify("Tiliqua nigrolutea") |> collapse()
galah_config(email = "amanda.buyan@csiro.au")
galah_call() |> galah_identify("Tiliqua nigrolutea") |> collapse()
galah_call() |> galah_identify("Tiliqua nigrolutea") |> atlas_counts() |> collapse()
galah_call() |> galah_identify("Tiliqua nigrolutea") |> collapse()
galah_call() |> galah_identify("Tiliqua nigrolutea") |> galah_filter(year == 2023) |> collapse()
galah_call() |> galah_identify("Tiliqua nigrolutea") |> galah_filter(year == 2023) |> atlas_counts()
test_call = request_data() |> galah_identify("Tiliqua nigrolutea") |> galah_filter(year == 2023) |> atlas_counts()
collapse(test_call)
test_call = request_data() |> galah_identify("Tiliqua nigrolutea") |> galah_filter(year == 2023) |> count()
collapse(test_call)
library(devtools)
devtools::install_github("AtlasOfLivingAustralia/corella")
library(corella)
library(tibble)
df <- tibble(
species = c("Callocephalon fimbriatum", "Eolophus roseicapilla"),
latitude = c(-35.310, "-35.273"), # deliberate error for demonstration purposes
longitude = c(149.125, 149.133),
eventDate = c("14-01-2023", "15-01-2023"),
status = c("present", "present")
)
df
df |> use_coordinates(decimalLatitude=latitude)
df |> use_coordinates(decimalLatitude=as.numeric(latitude))
df |> suggest_workflow()
df |> check_occurrences()
df |> check_basisOfRecord() |> check_coords()
devtools::install_github("AtlasOfLivingAustralia/corella")
library(corella)
history
status = c("present", "present")
eventDate = c("14-01-2023", "15-01-2023"),
longitude = c(149.125, 149.133),
latitude = c(-35.310, "-35.273"), # deliberate error for demonstration purposes
species = c("Callocephalon fimbriatum", "Eolophus roseicapilla"),
df <- tibble(pecies = c("Callocephalon fimbriatum", "Eolophus roseicapilla"),latitude = c(-35.310, "-35.273"),longitude = c(149.125, 149.133),eventDate = c("14-01-2023", "15-01-2023"),status = c("present", "present"))
df <- tibble(species = c("Callocephalon fimbriatum", "Eolophus roseicapilla"),latitude = c(-35.310, "-35.273"),longitude = c(149.125, 149.133),eventDate = c("14-01-2023", "15-01-2023"),status = c("present", "present"))
library(tibble)
df <- tibble(species = c("Callocephalon fimbriatum", "Eolophus roseicapilla"),latitude = c(-35.310, "-35.273"),longitude = c(149.125, 149.133),eventDate = c("14-01-2023", "15-01-2023"),status = c("present", "present"))
df |> check_occurrence()
df |> check_occurrences()
df |> suggest_workflow()
df |> use_occurrences()
?use_occurrences()
df |> use_occurrences(basisOfRecord = "humanObservation")
df |> use_occurrences(basisOfRecord = "humanObservati")
pwd
pwd()
devtools::install_github("AtlasOfLivingAustralia/paperbark")
library(paperbark)
read_eml("https://collections.ala.org.au/ws/eml/dr368")
tibble_eml <- read_eml("https://collections.ala.org.au/ws/eml/dr368")
tibble_eml
print(tibble_eml,n=1000)
libary(paperbark)
library(devtools)
devtools::install_github("AtlasOfLivingAustralia/paperbark")
library(paperbark)
temp <- read_eml("https://collections.ala.org.au/ws/eml/dr368")
temp
write_md(temp, "metadata.md")
getwd()
x <- system.file("example_data",
"README_md_example.md",
package = "paperbark") |>
x
x <- system.file("example_data",
"README_md_example.md",
package = "paperbark")
x
x <- system.file("example_data",
"README_md_example.md",
package = "paperbark")
write_md(x,"metadata.md")
install.packages("galah")
show_all(fields)
library(galah)
show_all(fields)
atlas_counts() |> collapse()
atlas_counts() |> compute()
atlas_counts() |> collect()
collapse(atlas_counts())
galah_call() |> count() |> collapse()
galah_call() |>
identify("Mammalia") |>
filter(year == 1990) |>
collapse()
galah_config(
atlas = "Austria",
email = "ala4r@ala.org.au",
directory = "temp",
download_reason_id = 10,
run_checks = TRUE, ## FIXME: Test only works when run_checks = TRUE
send_email = FALSE)
galah_call() |>
identify("Mammalia") |>
filter(year == 1990) |>
collapse()
query <- galah_call() |>
identify("Mammalia") |>
filter(year == 1990) |> collapse()
query
query[url]
query['url']
galah_call(type = values) |> collapse()
library(galah)
galah_call(type = values) |> collapse()
galah_call() |> show_values(basisOfRecord)
galah_call() |> show_values("basisOfRecord")
search_fields("basisOfRecord") |> show_values
galah_config(atlas="United Kingdom")
search_fields("basisOfRecord") |> show_values()
request_metadata() |>
filter(field == "cl22") |>
unnest() |>
collect()
request_metadata() |>
filter(field == "basisOfRecord") |>
unnest() |>
collect()
search_fields("basisOfRecord") |> collapse()
galah_call(type="values") |> search_fields("basisOfRecord") |> collapse()
galah_call(type = "species") |> search_fields("basisOfRecord") |> collapse()
galah_call(type = "species") |> search_fields("basisOfRecord") |> show_values()
search_fields("basisOfRecord") |> show_values()
galah_call(type="occurrences") |> galah_identify("Ramphastos Toco") |> collapse()
galah_config(download_id_reason=10)
galah_config
galah_config()
galah_config(download_reason_id=10)
galah_call(type="occurrences") |> galah_identify("Ramphastos Toco") |> collapse()
url <- galah_call(type="occurrences") |> galah_identify("Ramphastos Toco") |> collapse()
url
View(url)
url[["url"]]
galah_call() |> galah_identify("Ramphastos Toco") |> atlas_occurrences()
galah_call() |> galah_identify("Vulpes vulpes") |> atlas_occurrences()
galah_call(atlas="Portugal")
galah_config(atlas="Portugal")
galah_call(type="occurrences") |> galah_identify("Ramphastos Toco") |> collapse()
galah_config(atlas="Guatemala")
show_all(assertions)
show_all(assertions)
show_all(collections)
show_all(fields)
show_all(providers)
show_all(providers) |> collapse()
galah_config(atlas="Portugal")
show_all(providers) |> collapse()
library(galah)
galah_config(atlas="Portugal")
show_all_providers()
library(galah)
galah_call(type = "counts") |> galah_identify(c("Swainsona formosa", "Crocodylus johnstoni", "Platalea (Platalea) regia", "Notamacropus agilis")) |> group_by("species") |> collapse()
galah_call(type = "species-count") |> galah_identify(c("Swainsona formosa", "Crocodylus johnstoni", "Platalea (Platalea) regia", "Notamacropus agilis")) |> group_by("species") |> collapse()
url <- galah_call(type = "species-count") |> galah_identify(c("Swainsona formosa", "Crocodylus johnstoni", "Platalea (Platalea) regia", "Notamacropus agilis")) |> group_by("species") |> collapse()
url[["url"]][["url"]]
url <- galah_call(type = "species") |> galah_identify(c("Swainsona formosa", "Crocodylus johnstoni", "Platalea (Platalea) regia", "Notamacropus agilis")) |> group_by("species") |> collapse()
url <- galah_call(type = "occurrences-count") |> galah_identify(c("Swainsona formosa", "Crocodylus johnstoni", "Platalea (Platalea) regia", "Notamacropus agilis")) |> group_by("species") |> collapse()
url[["url"]][["url"]]
url
url["url"]
#galah_call(type = "species") |> galah_geolocate() |> collapse()
location <- "POLYGON((142.3 -29.0,142.7 -29.1,142.7 -29.4,142.3 -29.0))" |>
sf::st_as_sfc()
location
galah_call(type = "species") |> galah_geolocate(location) |> collapse()
galah_config(email="amanda.buyan@csiro.au")
galah_call(type = "species") |> galah_geolocate(location) |> collapse()
url_temp ,_ galah_call(type = "species") |> galah_geolocate(location) |> collapse()
url_temp <_ galah_call(type = "species") |> galah_geolocate(location) |> collapse()
url_temp["url"]
url_temp[["url"]
url_temp[["url"]]
url_temp <- galah_call(type = "species") |> galah_geolocate(location) |> collapse()
url_temp["url"]
install.packages("remotes")
remotes::install_github("AtlasOfLivingAustralia/delma")
library(delma)
use_metadata("my_metadata_statement.Rmd")
render_metadata("my_metadata_statement.Rmd", "metadata.xml")
getwd()
render_metadata("my_metadata_statement.Rmd", "metadata.xml")
use_metadata("my_metadata_statement.Rmd")
render_metadata("my_metadata_statement.Rmd", "metadata.xml")
read_eml("https://collections.ala.org.au/ws/eml/dr368")
read_eml("https://collections.ala.org.au/ws/eml/dr368") |> write_md()
write_md() |> read_eml("https://collections.ala.org.au/ws/eml/dr368")
write_md("https://collections.ala.org.au/ws/eml/dr368")
devtools::install_github("AtlasOfLivingAustralia/delma@development")
library(delma)
read_eml("https://collections.ala.org.au/ws/eml/dr368")
write_md() |> read_eml("https://collections.ala.org.au/ws/eml/dr368")
library(devtools)
devtools::install_github("AtlasOfLivingAustralia/delma@development")
devtools::install_github("AtlasOfLivingAustralia/delma@development",force=TRUE)
library(delma)
read_eml("https://collections.ala.org.au/ws/eml/dr368")
read_eml("https://collections.ala.org.au/ws/eml/dr368")
temp ,_ read_eml("https://collections.ala.org.au/ws/eml/dr368")
#temp _ read_eml("https://collections.ala.org.au/ws/eml/dr368")
read_eml("https://collections.ala.org.au/ws/eml/dr368") |> write_md()
read_eml("https://collections.ala.org.au/ws/eml/dr368") |> write_md("metadata.md")
devtools::install_github("AtlasOfLivingAustralia/corella")
library(corella)
event_terms()
occurrence_terms()
countryCode_values()
library(corella)
occurrence_terms()
event_terms()
install.packages("galah")
library(galah)
galah_call() |> galah_identify("Ornithorhynchus anatinus") |> galah_filter(year == 2020, decimalLongitude > 153.0) |> galah_select(assertions=all,basic) |> atlas_occurrences()
galah_call() |> galah_identify("Ornithorhynchus anatinus") |> galah_filter(year == 2020, decimalLongitude > 153.0) |> galah_select(assertions,basic) |> atlas_occurrences()
galah_call() |> galah_identify("Ornithorhynchus anatinus") |> galah_filter(year == 2020, decimalLongitude > 153.0) |> galah_select("assertions=all","basic") |> atlas_occurrences()
galah_call("occurrences") |> galah_identify("Ornithorhynchus anatinus") |> galah_filter(year == 2020, decimalLongitude > 153.0) |> galah_select("assertions=all","basic") |> collapse()
galah_call(data="occurrences") |> galah_identify("Ornithorhynchus anatinus") |> galah_filter(year == 2020, decimalLongitude > 153.0) |> galah_select("assertions=all","basic") |> collapse()
galah_call(type="occurrences") |> galah_identify("Ornithorhynchus anatinus") |> galah_filter(year == 2020, decimalLongitude > 153.0) |> galah_select("assertions=all","basic") |> collapse()
galah_call(type="occurrences") |> galah_identify("Ornithorhynchus anatinus") |> galah_filter(year == 2020, decimalLongitude > 153.0) |> galah_select(c("assertions","basic") |> collapse()
galah_call(type="occurrences") |> galah_identify("Ornithorhynchus anatinus") |> galah_filter(year == 2020, decimalLongitude > 153.0) |> galah_select(c("assertions","basic")) |> collapse()
x <- galah_call() |>
identify("Ornithorhynchus anatinus") |>
filter(year == 2020, decimalLongitude > 153.0) |>
select(group = c("basic", "assertions")) |>
collect()
galah_config(email="amanda.buyan@csiro.au")
x <- galah_call() |>
identify("Ornithorhynchus anatinus") |>
filter(year == 2020, decimalLongitude > 153.0) |>
select(group = c("basic", "assertions")) |>
collect()
x
x <- galah_call() |>
identify("Ornithorhynchus anatinus") |>
filter(year == 2020, decimalLongitude > 153.0) |>
select(group = c("basic", "assertions")) |>
collapse()
x
x['url']
install.packages("galah")
library(galah)
?galah_call()
galah_call("occurrences") |> galah_select(c("decimalLatitude","decimalLongitude")) |> galah_identify("Vulpes vulpes") |> collapse()
request_data("occurrences") |> galah_select(c("decimalLatitude","decimalLongitude")) |> galah_identify("Vulpes vulpes") |> collapse()
galah_config(email="amanda.buyan@csiro.au")
request_data("occurrences") |> galah_select(c("decimalLatitude","decimalLongitude")) |> galah_identify("Vulpes vulpes") |> collapse()
url <- request_data("occurrences") |> galah_select(c("decimalLatitude","decimalLongitude")) |> galah_identify("Vulpes vulpes") |> collapse()
url[url]
url['url']
galah_call() |> galah_select(c("decimalLatitude","decimalLongitude")) |> galah_identify("Vulpes vulpes") |> atlas_occurrences()
install.packages(delma)
install.packages("delma")
library(delma)
use_metadata_template()
write_eml()
write_eml(metadata.Rmd)
write_eml("metadata.Rmd")
as_eml_xml("metadata.Rmd") |> write_eml()
read_md("metadata.Rmd") |> as_eml_xml()
read_md("metadata.Rmd") |> as_eml_xml() |> write_eml()
read_md("metadata.Rmd") |> as_eml_xml() |> write_eml("eml.xml")
use_metadata("metadata.Rmd")
?delma
update.packages("delma")
update.packages()
update.packages(ask = FALSE)
install.packages("galaxias")
library(galaxias)
use_metadata()
use_metadata("metadata.Rmd")
use_metadata("metadata.Rmd")
galaxias_version_string <- function() {
version_string <- "version-unknown"
suppressWarnings(
try(version_string <- utils::packageDescription("galaxias")[["Version"]],
silent = TRUE))
glue::glue("galaxias-R-{version_string}") |>
as.character()
}
form_json <- function (value)
{
if(is.character(value)){
value <- enc2utf8(value) |>
glue::glue_collapse(sep = "\n") |>
as.character() |>
charToRaw()
}
if(!is.raw(value)){
cli::cli_abort("Argument 'value' must be string or raw vector")
}
list(value = value,
type = "application/json") |>
structure(class = "form_data")
}
form_zip <- function(file_path){
x <- normalizePath(file_path[1],
mustWork = TRUE) |>
enc2native()
list(path = x,
type = "application/zip",
name = NULL) |>
structure(class = "form_file")
}
version_string <- galaxias_version_string()
version_string
userpwd_string <-   glue::glue("{username}:{password}") |>
as.character()
userpwd_string <-   glue::glue("{"atlasoflivingaustralia"}:{"galah-gbif-test-login"}") |>
username = "atlasoflivingaustralia"
password = "galah-gbif-test-login"
userpwd_string <-   glue::glue("{username}:{password}") |>
as.character()
userpwd_string
email_string <- "ala4r@ala.org.au"
validation_request_json <- list(
sourceId = jsonlite::unbox(version_string),
notificationEmail = email_string) |>
jsonlite::toJSON() |>
form_json()
validation_request_json
validation_request_json$value
validation_request_json
str(validation_request_json)
jsonlite::unbox(version_string)
validation_request_json <- list(
sourceId = jsonlite::unbox(version_string),
notificationEmail = email_string) |>
jsonlite::toJSON()
validation_request_json
validation_request_json |> form_json()
validation_request_file <- form_zip(file_path = file)
getwd()
validation_request_file <- form_zip(file_path = "Documents/Github/temp")
validation_request_file <- form_zip(file_path = "Documents/Github/galaxias-python/docs/source/data-publish/dwca.zip")
validation_request_file
httr2::req_options(
httpauth = 1,
userpwd = userpwd_string)
httr2::req_body_multipart(
file = validation_request_file,
validationRequest = validation_request_json)
httr2::request("https://api.gbif.org/v1/validation") |>
httr2::req_options(
httpauth = 1,
userpwd = userpwd_string)
httr2::request("https://api.gbif.org/v1/validation") |>
httr2::req_body_multipart(
file = validation_request_file,
validationRequest = validation_request_json)
query <- httr2::request("https://api.gbif.org/v1/validation") |>
httr2::req_body_multipart(
file = validation_request_file,
validationRequest = validation_request_json)
query
list(query)
View(query)
query[["url"]]
query[["body"]][["data"]][["file"]]
query[["body"]][["data"]]
str(query[["body"]][["data"]])
setwd('Documents/GitHub/galaxias-python/docs/source/data-publish/')
pwd
library(galaxias)
install.packages(galaxias)
install.packages('galaxias')
library(galaxias)
check_archive('dwca.zip')
getwd()
check_archive('data-publish/dwca.zip',username = "atlasoflivingaustralia",email = "ala4r@ala.org.au", password = "galah-gbif-test-login")
