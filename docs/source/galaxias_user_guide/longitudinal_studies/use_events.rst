.. _use_events:

use_events
==================

For this function, we are only checking the ``events`` dataframe.  This function will check specifically for:

- ``eventID``: ID of all your events. Can be constructed, or can be generated by ``corella`` using ``uuid``.
- ``parentEventID``: linked ID of all your events.  Events are in a hierarchy, which we will discuss below.
- ``eventType``: what type of event is it (i.e. Survey, BioBlitz, Site Visit etc.)
- ``eventDate``: date of the event
- ``Event``: name of the event
- ``samplingProtocol``: how did you record your data (i.e. Observation, etc.)

Adding event-specific information 
-----------------------------------------

For events, we need to specify all of the above information.  First, we need to specify the event type.  For 
the events file we have, this is under the heading ``type``.  We can also specify how all of the data was collected; 
however, rather than specifying a column name, we are going to specify the value of ``Observation``.  Finally, 
we need to specify the name of the event, which is the column headed ``name``.

.. prompt:: python

    >>> my_dwca.use_events(eventType='type',
    ...                    samplingProtocol='Observation',
    ...                    Event='name')
    >>> my_dwca.events.head()

.. program-output:: python galaxias_user_guide/longitudinal_studies/events_workflow.py 4

Next.

Event hierarchy
-----------------------------------------

.. prompt:: python

    >>> my_dwca.use_events(eventType='type',
    ...                    samplingProtocol='Observation',
    ...                    Event='name',
    ...                    event_hierarchy={1: "Site Visit", 2: "Sample", 3: "Observation"})

.. program-output:: python galaxias_user_guide/longitudinal_studies/events_workflow.py 5

what does ``check_data`` and ``suggest_workflow`` say now? 
----------------------------------------------------------------

*Note:* each of the ``use_*`` functions checks your data for compliance with the 
Darwin core standard, but it's always good to double-check your data.

Now, we can check that our data column do comply with the Darwin Core standard.

.. prompt:: python

    >>> my_dwca.check_data(occurrences=occurrences,
    ...                    events=events)

.. program-output:: python galaxias_user_guide/longitudinal_studies/events_workflow.py 6

However, since we don't have all of the required columns, we can run ``suggest_workflow()`` 
again to see how our data is doing this time round.

.. prompt:: python

    >>> my_dwca.suggest_workflow(events=events)

.. program-output:: python galaxias_user_guide/longitudinal_studies/events_workflow.py 7

Other functions
-----------------------------------------

To learn more about how to use these functions, go to 

 - `use_datetime <use_datetime.html>`_

Optional functions:

- `use_locality <use_locality.html>`_